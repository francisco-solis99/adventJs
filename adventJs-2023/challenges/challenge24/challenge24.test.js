import { test, describe, expect, expectTypeOf } from 'vitest'
import { getStaircasePaths } from './challenge24'

describe('Jump pn the stairs', () => {
  test('Test 1', () => {
    expectTypeOf(getStaircasePaths).returns.toEqualTypeOf()
  })

  test('Test 2', () => {
    const received = getStaircasePaths(4, 2)
    const expected = [
      [
        1,
        1,
        1,
        1
      ],
      [
        1,
        1,
        2
      ],
      [
        1,
        2,
        1
      ],
      [
        2,
        1,
        1
      ],
      [
        2,
        2
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test 3', () => {
    const received = getStaircasePaths(0, 0)
    const expected = [
      []
    ]
    expect(received).toEqual(expected)
  })

  test('Test 4', () => {
    const received = getStaircasePaths(1, 1)
    const expected = [
      [
        1
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test 5', () => {
    const received = getStaircasePaths(7, 3)
    const expected = [
      [
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      [
        1,
        1,
        1,
        1,
        1,
        2
      ],
      [
        1,
        1,
        1,
        1,
        2,
        1
      ],
      [
        1,
        1,
        1,
        1,
        3
      ],
      [
        1,
        1,
        1,
        2,
        1,
        1
      ],
      [
        1,
        1,
        1,
        2,
        2
      ],
      [
        1,
        1,
        1,
        3,
        1
      ],
      [
        1,
        1,
        2,
        1,
        1,
        1
      ],
      [
        1,
        1,
        2,
        1,
        2
      ],
      [
        1,
        1,
        2,
        2,
        1
      ],
      [
        1,
        1,
        2,
        3
      ],
      [
        1,
        1,
        3,
        1,
        1
      ],
      [
        1,
        1,
        3,
        2
      ],
      [
        1,
        2,
        1,
        1,
        1,
        1
      ],
      [
        1,
        2,
        1,
        1,
        2
      ],
      [
        1,
        2,
        1,
        2,
        1
      ],
      [
        1,
        2,
        1,
        3
      ],
      [
        1,
        2,
        2,
        1,
        1
      ],
      [
        1,
        2,
        2,
        2
      ],
      [
        1,
        2,
        3,
        1
      ],
      [
        1,
        3,
        1,
        1,
        1
      ],
      [
        1,
        3,
        1,
        2
      ],
      [
        1,
        3,
        2,
        1
      ],
      [
        1,
        3,
        3
      ],
      [
        2,
        1,
        1,
        1,
        1,
        1
      ],
      [
        2,
        1,
        1,
        1,
        2
      ],
      [
        2,
        1,
        1,
        2,
        1
      ],
      [
        2,
        1,
        1,
        3
      ],
      [
        2,
        1,
        2,
        1,
        1
      ],
      [
        2,
        1,
        2,
        2
      ],
      [
        2,
        1,
        3,
        1
      ],
      [
        2,
        2,
        1,
        1,
        1
      ],
      [
        2,
        2,
        1,
        2
      ],
      [
        2,
        2,
        2,
        1
      ],
      [
        2,
        2,
        3
      ],
      [
        2,
        3,
        1,
        1
      ],
      [
        2,
        3,
        2
      ],
      [
        3,
        1,
        1,
        1,
        1
      ],
      [
        3,
        1,
        1,
        2
      ],
      [
        3,
        1,
        2,
        1
      ],
      [
        3,
        1,
        3
      ],
      [
        3,
        2,
        1,
        1
      ],
      [
        3,
        2,
        2
      ],
      [
        3,
        3,
        1
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test 6', () => {
    const received = getStaircasePaths(3, 3)
    const expected = [
      [
        1,
        1,
        1
      ],
      [
        1,
        2
      ],
      [
        2,
        1
      ],
      [
        3
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test 7', () => {
    const received = getStaircasePaths(2, 1)
    const expected = [
      [
        1,
        1
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test 8', () => {
    const received = getStaircasePaths(5, 2)
    const expected = [
      [
        1,
        1,
        1,
        1,
        1
      ],
      [
        1,
        1,
        1,
        2
      ],
      [
        1,
        1,
        2,
        1
      ],
      [
        1,
        2,
        1,
        1
      ],
      [
        1,
        2,
        2
      ],
      [
        2,
        1,
        1,
        1
      ],
      [
        2,
        1,
        2
      ],
      [
        2,
        2,
        1
      ]
    ]
    expect(received).toEqual(expected)
  })
})
